import React, {
    useContext,
    useCallback
} from 'react';
import {
    isChangeEventWithValue
} from '..';
import FiltersContext from './FiltersContext';
const connectFilter = (WrappedComponent) => {
    const ConnectFilter = ({
        name,
        ...restOfProps
    }) => {
        const {
            values,
            updateValue
        } = useContext(FiltersContext);
        const handleChange = useCallback((value) => {
            updateValue(name, isChangeEventWithValue(value) ? value.target.value : value);
        }, [name, updateValue]);
        return React.createElement(WrappedComponent, { ...restOfProps,
            name: name,
            value: values[name],
            onChange: handleChange
        });
    };
    ConnectFilter.displayName = `connectFilter(${WrappedComponent.name})`;
    return ConnectFilter;
};
export default connectFilter;