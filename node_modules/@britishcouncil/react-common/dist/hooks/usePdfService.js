import {
    DateTime
} from 'luxon';
import {
    useCallback
} from 'react';
export function usePdfService(params) {
    const {
        generatePdfRequestHandler,
        getPdfRequestHandler,
        timeoutIntervalRange = 1000
    } = params;
    const syncPdfInfo = useCallback((couponInfo) => {
        return new Promise((resolve, reject) => {
            const getPdf = async () => {
                const {
                    data
                } = await getPdfRequestHandler(couponInfo.coupon);
                if (data ? .uri ? .length) {
                    return resolve(data.uri);
                }
                if (!isTimedOut(data.timeToLive)) {
                    setTimeout(getPdf, timeoutIntervalRange);
                } else {
                    return reject('Request expired');
                }
            };
            getPdf();
        });
    }, [getPdfRequestHandler, timeoutIntervalRange]);
    const downloadPdf = useCallback(async () => {
        try {
            const {
                data
            } = await generatePdfRequestHandler();
            if (!data) {
                return Promise.reject('Missing coupon');
            }
            const uri = await syncPdfInfo(data);
            window.location.href = uri;
            return Promise.resolve();
        } catch (error) {
            return Promise.reject(error);
        }
    }, [generatePdfRequestHandler, syncPdfInfo]);
    return downloadPdf;
}
const isTimedOut = (timeToLive) => DateTime.fromISO(timeToLive).diffNow().milliseconds < 0;