import {
    useState
} from 'react';
/**
 * Sync state to local storage so that it persists through
 * a page refresh or when navigated to different apps within the same domain.
 * @param key unique identifier
 * @param initialValue initial value for specified key
 */
export const useLocalStorage = (key, initialValue) => {
    const [error, setError] = useState();
    const [storedValue, setStoredValue] = useState(() => {
        if (typeof window === 'undefined') {
            return initialValue;
        }
        try {
            const item = window.localStorage.getItem(key);
            return item ? JSON.parse(item) : initialValue;
        } catch (error) {
            return initialValue;
        }
    });
    const setValue = (valueToStore) => {
        try {
            setStoredValue(valueToStore);
            if (typeof window !== 'undefined') {
                window.localStorage.setItem(key, JSON.stringify(valueToStore));
            }
        } catch (error) {
            setError(error);
        }
    };
    return {
        storedValue,
        setValue,
        error
    };
};