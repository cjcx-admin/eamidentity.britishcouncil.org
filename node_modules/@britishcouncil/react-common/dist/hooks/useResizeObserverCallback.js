import ResizeObserver from 'resize-observer-polyfill';
import {
    useRef,
    useEffect,
    useState,
    useCallback
} from 'react';
export function useResizeObserverCallback(onResize) {
    const [element, setElement] = useState(null);
    const resizeObserverRef = useRef();
    useEffect(() => {
        resizeObserverRef.current = new ResizeObserver((entries) => {
            for (const entry of entries) {
                onResize(entry.contentRect);
            }
        });
        return () => {
            resizeObserverRef.current ? .disconnect();
        };
    }, [onResize]);
    useEffect(() => {
        if (!element) {
            return;
        }
        resizeObserverRef.current ? .observe(element);
        return () => {
            resizeObserverRef.current ? .disconnect();
        };
    }, [element]);
    return useCallback((instance) => {
        setElement(instance);
    }, []);
}