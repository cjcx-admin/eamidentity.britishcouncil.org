import {
    useEffect,
    useRef
} from 'react';
/**
 * Debounces useEffect with given timeout
 * @param callback Effect callback function
 * @param timeout Timeout in ms
 * @param deps Dependencies that will go to the dependency of the useEffect
 */
export function useDebouncedEffect(callback, timeout, deps = []) {
    const timeoutId = useRef();
    useEffect(() => {
        window.clearTimeout(timeoutId.current);
        timeoutId.current = window.setTimeout(callback, timeout);
        return () => window.clearTimeout(timeoutId.current);
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, deps);
}