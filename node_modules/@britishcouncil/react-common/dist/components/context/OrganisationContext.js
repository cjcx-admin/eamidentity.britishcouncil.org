import React, {
    createContext,
    useCallback,
    useContext,
    useEffect
} from 'react';
import {
    useLocalStorage
} from '../../hooks';
const ORGANISATION_KEY = 'CTX_SELECTED_ORGANISATION';
const Context = createContext({
    orgData: {},
    setOrgData: () => {}
});
const useOrganisationContext = () => {
    return useContext(Context);
};
const OrganisationContext = ({
    children,
    syncFn
}) => {
    const {
        storedValue: orgData,
        setValue
    } = useLocalStorage(ORGANISATION_KEY, {});
    useEffect(() => {
        syncFn && syncFn(orgData);
    }, [orgData, syncFn]);
    const setOrgData = useCallback((v) => {
        setValue(v);
        syncFn && syncFn(v);
    }, [setValue, syncFn]);
    return React.createElement(Context.Provider, {
        value: {
            orgData,
            setOrgData
        }
    }, children);
};
export {
    ORGANISATION_KEY,
    OrganisationContext,
    useOrganisationContext
};