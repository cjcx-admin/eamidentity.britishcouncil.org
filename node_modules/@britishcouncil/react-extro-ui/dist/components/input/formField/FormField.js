import React from 'react';
import * as S from './FormField.styles';
export const FormField = React.forwardRef(({
    id,
    readOnly,
    label,
    error,
    disabled,
    children,
    optional,
    ...rest
}, ref) => {
    const showErrorMessage = error && !disabled && !readOnly;
    return (React.createElement(S.Root, {
            ref: ref
        },
        label && (React.createElement(S.Label, {
                htmlFor: id
            },
            label,
            " ",
            optional && React.createElement(S.LabelOptional, null,
                "(",
                optional.text,
                ")"))),
        React.createElement(S.InputWrapper, {
            error: !!error
        }, children ? (React.Children.map(children, (child) => {
            if (React.isValidElement(child)) {
                return React.cloneElement(child, { ...child.props,
                    disabled,
                    readOnly,
                    id,
                    ...rest
                });
            }
            return child;
        })) : (React.createElement("input", {
            disabled: disabled,
            readOnly: readOnly,
            id: id,
            ...rest
        }))),
        showErrorMessage && (React.createElement(S.ErrorContainer, null,
            React.createElement(S.ErrorPipe, null),
            React.createElement(S.ErrorMessage, {
                "data-test-id": `${id}-error-msg`
            }, error)))));
});