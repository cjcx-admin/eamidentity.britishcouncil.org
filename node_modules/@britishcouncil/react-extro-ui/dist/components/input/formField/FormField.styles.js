import {
    css
} from '@emotion/react';
import styled from '@emotion/styled';
import {
    spacingFn
} from '../../../theme';
import {
    theme
} from '../../../theme/theme';
export const Root = styled.div `
  display: flex;
  flex-direction: column;
  row-gap: ${({ theme }) => theme.spacing.sm};
`;
export const InputBase = css `
  width: 100%;
  color: #000;
  max-height: ${spacingFn(6)};
  height: ${spacingFn(6)};

  font-size: ${theme.fontSize.default};

  background-color: #fff;
  border-radius: ${theme.spacing.xs};
  padding: ${theme.spacing.md};
  border: 1px solid ${theme.colors.lightGrey};

  ::placeholder {
    color: ${theme.colors.placeholder.default};
  }

  :hover {
    border: 1px solid #000;
  }

  :active,
  :focus {
    border: 2px solid ${theme.colors.darkBlue};
  }
`;
export const InputDisabled = css `
  :disabled {
    cursor: default;
    color: #646464;
    background: ${theme.colors.lightGrey};
    border: none;

    ::placeholder {
      color: inherit;
    }

    :active,
    :focus {
      border: inherit;
    }
  }
`;
export const InputReadOnly = css `
  :read-only:not([disabled]) {
    padding: 0;
    background: transparent;
    border: none;
  }
`;
export const InputError = css `
  color: ${theme.colors.darkRed};
  border: 1px solid ${theme.colors.darkRed};

  ::placeholder {
    color: ${theme.colors.placeholder.error};
  }

  :active,
  :focus {
    border: 2px solid ${theme.colors.darkRed};

    :hover {
      border: 2px solid ${theme.colors.darkRed};
    }
  }

  &:hover {
    border: 1px solid ${theme.colors.darkRed};
  }
`;
export const InputWrapper = styled.div `
  input {
    ${InputBase};
    ${InputDisabled};
    ${InputReadOnly};

    ${({ error }) => (error ? InputError : '')};
  }
`;
export const ErrorContainer = styled.div `
  display: flex;
  min-height: 38px;
`;
export const ErrorPipe = styled.div `
  border: 3px solid ${({ theme }) => theme.colors.darkRed};
  border-radius: 30px;
  width: 1px;
`;
export const ErrorMessage = styled.div `
  color: ${({ theme }) => theme.colors.darkRed};
  font-weight: 700;
  padding: 10px;
`;
export const LabelStyles = css `
  cursor: default;
  margin-bottom: 0;
  font-size: ${theme.fontSize.default};
  color: ${theme.colors.text.body};
`;
export const Label = styled.label `
  ${LabelStyles};
`;
export const LabelOptional = styled.span `
  color: ${({ theme }) => theme.colors.lightGrey};
`;