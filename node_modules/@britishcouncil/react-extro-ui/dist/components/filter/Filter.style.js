import styled from '@emotion/styled';
export const ButtonWrapper = styled.div `
  border-top: 1px solid ${({ theme }) => theme.colors.lightGrey};

  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
`;
export const ButtonFilter = styled('button', {
    shouldForwardProp: (prop) => !['disabled', 'variant'].includes(prop)
})
`
  width: 100%;
  display: block;
  padding: 24px 0;
  text-align: center;
  color: var(--dark-hues-dark-blue, #005cb9);
  font-weight: 700;

  &:first-of-type {
    border-inline-end: 1px solid ${({ theme }) => theme.colors.lightGrey};
    border-radius: 0 0 0 8px;
  }
  &:last-of-type {
    border-inline-end: 1px solid ${({ theme }) => theme.colors.lightGrey};
    border-radius: 0 0 8px 0;
  }

  ${({ variant }) => (variant === 'compact' ? `
padding: 16 px 0;
` : `
padding: 24 px 0;
`)};
  ${({ disabled }) => disabled &&
    `
background: rgba(84, 86, 90, 0.6);
color: #fff;
cursor: no - drop;
`};

  &:hover {
    ${({ disabled }) => !disabled && `
background: rgba(151, 218, 255, 0.15);
color: #333`};
    span {
      ${({ disabled }) = > !disabled && ` color: #333`
};
}
}

&
: active {
    $ {
        ({
            disabled
        }) => !disabled &&
            `
        background-color: #180270;
        color: #fff;
      `
    };
} &
: focus {
    background: $ {
        ({
            theme
        }) => `${theme.colors.darkBlue}`
    };
    color: #fff;
    font - weight: 700;
    span {
        color: #fff;
    }
}
`;
export const FilterCounter = styled.div `
display: inline - block;
background: #005cb9;
  border: 1px solid # 005 cb9;
border - radius: 16 px;
color: #fff;
font - size: 14 px;
font - weight: 400;
text - align: left;
padding: 2 px 8 px;
line - height: 19 px;

svg {
    position: relative;
    fill: none;
    top: 2 px;
    width: 12 px;
    height: 12 px;
}
`;
export const FilterCleaner = styled.div `
cursor: pointer;
display: inline - block;
position: relative;
top: -0.5 px;
`;
export const FilterSearchIcon = styled.div `
position: absolute;
right: 32 px;
top: 50 % ;
transform: translateY(-38 % );
z - index: -1;
svg {
    fill: none;
}
`;
export const FilterSearchWrapper = styled('div', { shouldForwardProp: (prop) => !['last', 'variant'].includes(prop) }) `
padding: 12 px 16 px;
position: relative;
$ {
    ({
        variant
    }) => variant !== 'compact' && `min-height: 70px;`
};

$ {
    ({
        last,
        theme
    }) => !last && `border-bottom: 1px solid ${theme.colors.lightGrey}`
};
color: #898a8d;
  input {
    padding: 12px 16px;
    width: 100%;
    &:active,
    &:focus {
      color: # 333;
}
}
`;
export const FilterWrapper = styled('div', { shouldForwardProp: (prop) => prop !== 'opened' }) `
position: relative;
.hideWhenClosed {
    display: none;
}

$ {
    ({
        opened
    }) => opened &&
        `
   .hideWhenClosed {
      display:block;
    }
    .hideWhenOpened {
      display:none;
    }
  `
};
`;
export const FilterLabel = styled.div `
color: #333;
  font-size: 14px;
  font-style: normal;
  font-weight: 700;
  margin-bottom: 8px;
`;
export const FilterList = styled('ul', {
    shouldForwardProp: (prop) => prop !== 'maxHeight'
})
`
  max-height: ${({ maxHeight }) => (maxHeight ? maxHeight : '420px;')};
  overflow-y: auto;
`;
export const FilterListWrapper = styled('div', {
    shouldForwardProp: (prop) => prop !== 'customWidth'
})
`
  background: #fff;
  border-radius: 8px;
  box-shadow: 0px 0px 40px 0px rgba(112, 144, 176, 0.3);
  left: 0;
  min-width: ${({ customWidth }) => (customWidth ? customWidth : '350px;')};
  position: absolute;
  top: calc(100% + 8px);
  z-index: 1;
`;
export const FilterTrigger = styled('div', {
    shouldForwardProp: (prop) => prop !== 'background'
})
`
  border: 1px solid #898a8d;
  border-radius: 8px;
  ${({ background }) => background && `
background: $ {
    background
}
`};
  cursor: pointer;
  color: #333;
  display: flex;
  font-size: 16px;
  flex-direction: row;
  gap: 10px;
  min-height: 56px;
  padding: 16px;
  position: relative;
  width: 242px;
  justify-content: space-between;

  &:focus {
    border: 1px solid ${({ theme }) => `
$ {
    theme.colors.darkBlue
}
`};
  }
  &:hover {
    .filterTriggerHoverText {
      display: block;
    }
  }
`;
export const FilterTriggerHoverText = styled.div `
  display: none;
  background: var(--dark-hues-dark-blue, #005cb9);
  border-radius: 8px;

  color: #fff;
  left: 50%;
  transform: translateX(-50%);

  padding: 8px 16px;
  position: absolute;
  bottom: calc(100% + 24px);
  max-width: 100%;

  svg {
    position: absolute;
    top: 95%;
    left: 50%;
    transform: translateX(-50%);
  }
`;
export const FilterTriggerArrow = styled('div', {
    shouldForwardProp: (prop) => prop !== 'opened'
})
`
  line-height: 0;

  svg {
    width: 24px;
    height: 24px;
    fill: none;
  }
  ${({ opened }) => opened && `
transform: rotateX(180 deg);
`};
`;
export const FilterTriggerText = styled('div', {
    shouldForwardProp: (prop) => prop !== 'wide'
})
`
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 98px;
  line-height: 24px;
  ${({ wide }) => wide && `
width: 158 px;
`};
`;
export const FilterElement = styled('li', {
    shouldForwardProp: (prop) => !['checked', 'inner', 'innerBorder', 'disabled', 'variant'].includes(prop),
})
`
  color: #333;
  cursor: pointer;
  font-size: 18px;
  ${({ variant }) => (variant === 'compact' ? `
padding: 16 px 32 px;
` : `
padding: 24 px 32 px;
`)};
  ${({ variant }) => variant !== 'compact' && `
min - height: 70 px;
`};
  ${({ inner }) => inner && `
padding - inline - start: 60 px `};
  ${({ checked }) => checked && `
font - weight: 700;
`};
  ${({ inner, innerBorder }) => !inner &&
    !innerBorder &&
    ` &
: first - of -type {
        border - radius: 8 px 8 px 0 0;
    } &
    : last - of -type {
        border - radius: 0 0 8 px 8 px;
    }
`};

  &:not(:first-of-type) {
    border-top: 1px solid ${({ theme }) => theme.colors.lightGrey};
  }

  &:focus {
    background: ${({ theme }) => `
$ {
    theme.colors.darkBlue
}
`};
    color: #fff;
    font-weight: 700;
    span {
      color: #fff;
    }
  }

  ${({ disabled, theme }) => disabled &&
    `
background: $ {
    theme.colors.lightGrey
};
color: rgba(84, 86, 90, 0.60);
cursor: no - drop;
`};

  &:hover {
    ${({ disabled }) => !disabled && `
background: rgba(151, 218, 255, 0.15);
color: #333;`};
    span {
      ${({ disabled }) = > !disabled && ` color: #333`
};
}
}

&
: active {
    $ {
        ({
            disabled
        }) => !disabled &&
            `
        background-color: #180270;
        color: #fff;
        span {
          color: #fff;
        }
      `
    };
}
`;
export const FilterLoader = styled('div', { shouldForwardProp: (prop) => prop !== 'customWidth' }) `
background: #fff;
border - radius: 8 px;
box - shadow: 0 px 0 px 40 px 0 px rgba(112, 144, 176, 0.3);
left: 0;
min - width: $ {
    ({
        customWidth
    }) => (customWidth ? customWidth : '350px;')
};
position: absolute;
top: 100 % ;
@keyframes icon - spin {
        0 % {
            transform: rotate(0 deg);
        }
        100 % {
            transform: rotate(359 deg);
        }
    }

    >
    svg {
        animation: icon - spin 2 s infinite linear;
    }
`;