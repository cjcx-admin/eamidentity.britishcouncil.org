import React, {
    useRef,
    useState
} from 'react';
import {
    useClickOutside
} from '@britishcouncil/react-common';
import styled from '@emotion/styled';
import {
    FiMoreVertical
} from 'react-icons/fi';
export const ActionsOpener = ({
    children,
    showOpener,
    disabled = false
}) => {
    const [showButtons, setShowButtons] = useState(!showOpener);
    const openerRef = useRef(null);
    useClickOutside(openerRef, () => setShowButtons(false));
    return (React.createElement(Root, null,
        showOpener && (React.createElement(Opener, {
                "data-testid": "actions-opener",
                ref: openerRef,
                onClick: () => setShowButtons((v) => !v),
                tabIndex: disabled ? -1 : 0
            },
            React.createElement(FiMoreVertical, null))),
        showButtons ? (showOpener ? (React.createElement(ActionsDropdown, null, children)) : (React.createElement(ActionsInline, null, children))) : null));
};
const Root = styled.div `
  position: relative;
  padding: 0 2rem;
`;
const Opener = styled.button `
  display: flex;
  justify-content: center;
  align-items: center;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.16), inset 0px 2px 4px rgba(0, 0, 0, 0.04);
  background: white;
  cursor: pointer;
  &&&:focus {
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.16), inset 0px 2px 4px rgba(0, 0, 0, 0.04);
  }
  &&&:focus-visible {
    box-shadow: ${({ theme: { colors } }) => `
0 0 0 0.4 rem $ {
    colors.orange
}, 0 0 0 0.4 rem $ {
    colors.orange
}
`};
    outline: none;
  }
`;
const ActionsDropdown = styled.div `
  top: 40px;
  width: 200px;
  left: -150px;
  position: absolute;
  display: flex;
  flex-direction: column;
  z-index: 10;
  filter: drop-shadow(0px 0px 40px rgba(112, 144, 176, 0.3));
  & > *:hover {
    background: #f0faff;
  }
  & > * {
    background: white;
    box-shadow: inset 0px -1px 0px #e2e8f0;
  }
  & > *:first-of-type {
    border-radius: 8px 8px 0 0;
  }
  & > *:last-of-type {
    box-shadow: unset;
    border-radius: 0 0 8px 8px;
  }
  & > *:focus-visible {
    box-shadow: ${({ theme: { colors } }) => `
inset 0 0 0 0.4 rem $ {
    colors.orange
}
`};
  }
`;
const ActionsInline = styled.div `
  display: flex;
`;