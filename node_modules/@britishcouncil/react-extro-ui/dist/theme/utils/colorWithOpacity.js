import {
    hexWithOpacity
} from '@britishcouncil/react-common';
import {
    theme
} from '../theme';
/**
 * Recursively get the color value by nested key.
 */
export const getColorByNestedKey = (colors, keys) => {
    const key = keys.shift();
    if (!key) {
        throw new Error(`Color key not found in theme.colors.`);
    }
    const color = colors[key];
    if (color === undefined) {
        throw new Error(`Color key '${key}' not found in theme.colors.`);
    }
    if (typeof color === 'object') {
        return getColorByNestedKey(color, keys);
    }
    return color;
};
/**
 * Use it when you need to add opacity to extro theme color
 * @param color theme predefined color, eg. 'segment.grey' or 'blue'
 * @param opacity opacity in a range of 0 and 1, eg. '0.2'
 */
export const colorWithOpacity = (color, opacity) => {
    const keys = color.split('.');
    const selectedColor = getColorByNestedKey(theme.colors, keys);
    return hexWithOpacity(selectedColor, opacity);
};