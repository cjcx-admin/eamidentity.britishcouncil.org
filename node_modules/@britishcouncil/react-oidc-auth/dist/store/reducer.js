export const initialState = {
    user: undefined,
    isAuthenticated: false,
    isLoading: false,
};
//actions
export const USER_CHANGED = 'oidc/USER_CHANGED';
export function userChanged(payload) {
    return {
        type: USER_CHANGED,
        payload,
    };
}
//reducer
export const oidcReducer = (state = initialState, {
    type,
    payload
}) => {
    switch (type) {
        case USER_CHANGED:
            return {
                isAuthenticated: payload.isAuthenticated,
                isLoading: payload.isLoading,
                user: payload.user ?
                    {
                        id_token: payload.user.id_token,
                        session_state: payload.user.session_state,
                        access_token: payload.user.access_token,
                        refresh_token: payload.user.refresh_token,
                        token_type: payload.user.token_type,
                        scope: payload.user.scope,
                        profile: payload.user.profile,
                        expires_at: payload.user.expires_at,
                    } :
                    undefined,
            };
        default:
            return state;
    }
};