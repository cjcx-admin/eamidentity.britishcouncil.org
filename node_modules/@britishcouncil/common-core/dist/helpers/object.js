import {
    identity
} from './function';
export function* generateObjectPaths(values, prefix = '') {
    const getPath = getPropertyPathFn(prefix, Array.isArray(values));
    for (const [key, value] of Object.entries(values)) {
        const path = getPath(key);
        yield path;
        if (typeof value === 'object' && value !== null) {
            yield* generateObjectPaths(value, path);
        }
    }
}
export const getDotPropertyPath = (base) => (key) => `${base}.${key}`;
export const getIndexPropertyPath = (base) => (key) => `${base}[${key}]`;
export const getPropertyPathFn = (base, isArray) => {
    if (isArray) {
        return getIndexPropertyPath(base);
    } else if (base) {
        return getDotPropertyPath(base);
    } else {
        return identity;
    }
};