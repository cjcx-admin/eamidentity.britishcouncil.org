const minPasswordLength = 8;
const minStrength = 3;
const upperCasePattern = /[A-Z]+/;
const lowerCasePattern = /[a-z]+/;
const numericPattern = /[0-9]+/;
// eslint-disable-next-line
const specialCharsPattern = /[`~\-!@#$%^&*()_+={}\[\]\\\|:;"'<>,\.\?\/]+/;
export function estimatePasswordCompliance(password) {
    const psw = password || '';
    const hasLowercase = lowerCasePattern.test(psw);
    const hasNumber = numericPattern.test(psw);
    const hasSpecialChars = specialCharsPattern.test(psw);
    const hasUppercase = upperCasePattern.test(psw);
    const isLongEnough = psw.length >= minPasswordLength;
    const passwordStrength = sumBooleans(hasLowercase, hasNumber, hasSpecialChars, hasUppercase);
    const strength = !isLongEnough ? 0 : passwordStrength;
    const isCompliant = strength >= minStrength;
    return {
        hasLowercase,
        hasNumber,
        hasSpecialChars,
        hasUppercase,
        isLongEnough,
        pswStrength: passwordStrength,
        strength,
        isCompliant,
    };
}

function sumBooleans(...booleans) {
    return booleans.map((b) => (b ? 1 : 0)).reduce((a, b) => a + b);
}