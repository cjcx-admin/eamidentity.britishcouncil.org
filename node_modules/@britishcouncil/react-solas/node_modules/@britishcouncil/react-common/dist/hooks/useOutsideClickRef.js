import {
    useEffect,
    useRef
} from 'react';
export function useOutsideClickRef(clickCallback) {
    const wrapperRef = useRef(null);
    useEffect(() => {
        const handleClickOutside = (event) => {
            if (clickCallback && wrapperRef.current && !wrapperRef.current.contains(event.target)) {
                clickCallback();
            }
        };
        document.addEventListener('click', handleClickOutside, true);
        return () => document.removeEventListener('click', handleClickOutside, true);
    }, [clickCallback]);
    return wrapperRef;
}