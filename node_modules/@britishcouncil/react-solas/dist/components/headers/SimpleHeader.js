import cn from 'classnames';
import React, {
    useState
} from 'react';
import * as S from './SimpleHeader.styles';
import {
    TopBar
} from './TopBar';
import {
    NavbarHeader
} from './NavbarHeader';
import {
    HamburgerLink
} from './HamburgerLink';
import {
    SimpleContainer
} from '../../containers';
import {
    MobileMenuContext
} from './MobileMenuContext';
export const SimpleHeader = (props) => {
    const [isOpen, toggleOpen] = useState(false);
    const toggleClick = () => toggleOpen((isOpen) => !isOpen);
    const closeMenu = () => toggleOpen(false);
    const headerClasses = cn('navbar', {
        'bc-navbar-microsite': props.micrositeStyle,
        'navbar-default': props.slim,
        'navbar-slim': !props.slim,
        'navbar-inverse': props.inverse,
        'bc-attached': props.attached,
        'navbar-with-border': props.hasBorderBottom,
        'compact-mobile-mode': props.compactMobileMode,
    });
    const isSecondaryNavVisible = !!props.secondaryNav;
    const linksPresent = !!props.children || isSecondaryNavVisible;
    const topBarVisible = props.slim && isSecondaryNavVisible || !!props.infoBox;
    return (React.createElement(MobileMenuContext.Provider, {
            value: {
                closeMenu
            }
        },
        React.createElement(S.Header, {
                className: headerClasses
            },
            React.createElement(SimpleContainer, {
                    size: props.size,
                    centered: props.centered
                },
                topBarVisible && React.createElement(TopBar, {
                    infoBox: props.infoBox,
                    secondaryNav: props.secondaryNav
                }), !topBarVisible && isSecondaryNavVisible ?
                React.createElement(S.NavbarHeaderWithSecondaryNavContainer, null,
                    React.createElement(NavbarHeader, {
                        logoUrl: props.logoUrl,
                        additionalTitle: props.additionalTitle,
                        slogan: props.slogan,
                        useSoftMarginTop: true,
                        style: {
                            width: 'auto'
                        }
                    }),
                    React.createElement(S.SecondaryNavContainer, null, props.secondaryNav)) :
                React.createElement(NavbarHeader, {
                    logoUrl: props.logoUrl,
                    additionalTitle: props.additionalTitle,
                    slogan: props.slogan,
                    useSoftMarginTop: topBarVisible
                }),
                linksPresent && React.createElement(HamburgerLink, {
                    onClick: toggleClick,
                    isOpen: isOpen
                }),
                linksPresent && (React.createElement("div", {
                        role: "navigation",
                        className: isOpen ? 'menu-show' : ''
                    },
                    props.children,
                    React.createElement(S.SecondaryNavMobileContainer, null, props.secondaryNav)))))));
};