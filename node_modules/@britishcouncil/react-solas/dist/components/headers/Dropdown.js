import React, {
    useState,
    useContext
} from 'react';
import cn from 'classnames';
import {
    useOutsideClickRef
} from '@britishcouncil/react-common';
import {
    Icon,
    Chevron
} from '../../icons';
import {
    NavLink
} from 'react-router-dom';
import {
    MobileMenuContext,
    NavItem
} from '.';
import {
    useMobileMode
} from '../../hooks';
export function Dropdown({
    showArrow = false,
    trigger = 'hover',
    name,
    children,
    to = '#',
    arrowIcon = React.createElement(Chevron, {
        direction: "up"
    }),
    linkDisabled = false,
}) {
    const isMobileMode = useMobileMode();
    const [dropDownVisible, setDropDownVisible] = useState(false);
    const elRef = useOutsideClickRef(() => {
        setDropDownVisible(false);
    });
    const {
        closeMenu
    } = useContext(MobileMenuContext);
    const handleMouseOver = () => {
        setDropDownVisible(true);
    };
    const handleMouseOut = () => {
        setDropDownVisible(false);
    };
    const handleMouseClick = () => {
        setDropDownVisible(!dropDownVisible);
        if (!linkDisabled) {
            closeMenu();
        }
    };
    const renderBody = () => {
        const className = cn('focus', {
            open: dropDownVisible
        });
        const children = (React.createElement(React.Fragment, null,
            name,
            (showArrow || isMobileMode) && React.createElement(Icon, null, arrowIcon)));
        if (linkDisabled) {
            return (React.createElement(NavItem, {
                className: className,
                location: to
            }, children));
        } else {
            return (React.createElement(NavLink, {
                className: className,
                to: to
            }, children));
        }
    };
    return (React.createElement("li", {
            className: "dropdown nav-item",
            ref: elRef,
            onMouseOver: trigger === 'hover' && !isMobileMode ? handleMouseOver : undefined,
            onMouseLeave: trigger === 'hover' && !isMobileMode ? handleMouseOut : undefined,
            onClick: trigger === 'click' || isMobileMode ? handleMouseClick : undefined
        },
        renderBody(),
        React.createElement("ul", {
            className: cn('dropdown-menu sub-nav', {
                open: dropDownVisible
            }),
            role: "menu"
        }, children)));
}