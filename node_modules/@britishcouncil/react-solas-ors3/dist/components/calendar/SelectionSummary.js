import React, {
    useRef
} from 'react';
import {
    useSticky
} from '@britishcouncil/react-common';
import {
    DateTime
} from 'luxon';
import styled from '@emotion/styled';
import cn from 'classnames';
import {
    LinkButton
} from '..';
import {
    breakpoints
} from '../../styles/break-points';
const i18nDefault = {
    selected: 'Selected',
    from: 'From',
    to: 'To',
    clear: 'Clear',
};
export const SelectionSummary = ({
    fromDate,
    toDate,
    onClear = () => null,
    i18n = i18nDefault,
}) => {
    const ref = useRef(null);
    const isSticky = useSticky(ref);
    if (!fromDate)
        return null;
    const isSingleDaySelected = toDate && fromDate.toDateString() === toDate.toDateString();
    return (React.createElement(Root, {
        className: cn('sticky', {
            floats: isSticky
        }),
        ref: ref
    }, isSingleDaySelected ? (React.createElement(React.Fragment, null,
        `${i18n.selected}:`,
        React.createElement("b", null, DateTime.fromJSDate(fromDate).toLocaleString(DateTime.DATE_MED)))) : (React.createElement(React.Fragment, null,
        `${i18n.from}:`,
        React.createElement("b", null, DateTime.fromJSDate(fromDate).toLocaleString(DateTime.DATE_MED)),
        toDate ? (React.createElement(React.Fragment, null,
            ` ${i18n.to}:`,
            React.createElement("b", null, DateTime.fromJSDate(toDate).toLocaleString(DateTime.DATE_MED)))) : null,
        React.createElement(LinkButton, {
            "data-testid": "clear-selection",
            onClick: onClear
        }, i18n.clear)))));
};
const Root = styled.div `
  color: #000;
  display: flex;
  align-items: center;
  background: #e5eff8;
  z-index: 21;
  padding: 10px 45px;
  margin: 0 -45px;
  &.sticky {
    position: sticky;
    top: 0;

    &.floats {
      box-shadow: 0 5px 5px -5px rgba(0, 0, 0, 0.25);
    }
  }
  b {
    font-size: 1.2em;
    margin-left: 8px;
    &:first-of-type {
      margin-right: 20px;
    }
  }
  button {
    margin: 0 10px;
  }
  @media (max-width: ${breakpoints['screen-md-min']}px) {
    padding: 10px 20px;
    margin: 0 -20px;
  }
`;