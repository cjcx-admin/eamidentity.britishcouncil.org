import React, {
    useEffect,
    useState
} from 'react';
import {
    Link
} from 'react-router-dom';
import {
    Button
} from '@britishcouncil/react-solas';
import {
    useForm
} from '@britishcouncil/react-forms';
import AriaModal from '@justfixnyc/react-aria-modal';
import styled from '@emotion/styled';
import {
    PasswordField,
    TextField
} from '../forms';
import {
    SuiPanel
} from '../layout';
import {
    GenericApiError
} from '../errors';
import {
    LinkButton
} from '../general';
const i18nDefault = {
    titleText: 'Login',
    headerText: 'Login',
    email: 'E-mail address',
    password: 'Password',
    forgotPass: 'Forgot password?',
    buttonText: 'Log in',
    hide: 'Hide',
};
export const LoginModal = ({
    show,
    onSubmit,
    onExit,
    formSchema,
    i18n = i18nDefault,
    forgotPassLink,
    logInApiError,
    errorMsg,
    onShow,
    onHide,
    logInProcessing = false,
}) => {
    const [prevState, setPrevState] = useState(null);
    const initialValues = {
        email: '',
        password: '',
    };
    useEffect(() => {
        if (prevState && !show && !!onHide) {
            onHide();
        }
        setPrevState(show);
    }, [show, onHide, prevState]);
    const {
        formik,
        fields
    } = useForm(formSchema, initialValues, ({
        email,
        password
    }) => onSubmit({
        email,
        password
    }), {
        validateOnBlur: false
    });
    if (!show)
        return null;
    return (React.createElement(AriaModal, {
            titleText: i18n.titleText,
            onExit: onExit,
            onEnter: onShow,
            verticallyCenter: true,
            initialFocus: "#login-field",
            underlayStyle: {
                paddingTop: '2em'
            }
        },
        React.createElement("form", {
                onSubmit: formik.handleSubmit,
                onReset: formik.handleReset
            },
            React.createElement(StyledPanel, {
                    intent: "default"
                },
                React.createElement(SuiPanel.Header, null,
                    React.createElement(HeaderContainer, null,
                        React.createElement(HeaderText, null, i18n.headerText),
                        React.createElement(LinkButton, {
                            onClick: onExit,
                            "data-testid": "close"
                        }, i18n.hide))),
                React.createElement(SuiPanel.Body, null,
                    React.createElement(TextField, {
                        label: i18n.email,
                        ...fields.email,
                        id: "login-field",
                        size: 60,
                        onBlur: () => {
                            fields.email.onBlur();
                            !!fields.email.value && formik.setFieldValue(fields.email.name, fields.email.value.trim());
                        }
                    }),
                    React.createElement(PasswordField, {
                        label: i18n.password,
                        ...fields.password
                    }),
                    forgotPassLink && (React.createElement(Link, {
                        className: "link",
                        to: forgotPassLink,
                        onClick: onExit
                    }, i18n.forgotPass))), !!logInApiError && (React.createElement(GenericApiError, {
                    apiError: logInApiError,
                    "data-testid": "login-error",
                    detailedMsg: errorMsg
                })),
                React.createElement(Footer, null,
                    React.createElement(CtasContainer, null,
                        React.createElement(Button, {
                            intent: "primary",
                            "data-testid": "login",
                            id: "btn-login",
                            type: "submit",
                            disabled: logInProcessing,
                            loading: logInProcessing
                        }, i18n.buttonText)))))));
};
const Footer = styled(SuiPanel.Header)
`
  border-radius: 0 0 5px 5px !important;
`;
const HeaderContainer = styled.div `
  display: flex;
  justify-content: space-between;
  align-content: center;
`;
const HeaderText = styled.span `
  justify-self: left;
  align-self: center;
  font-size: 1.5em;
  color: #23085a;
  font-weight: bold;
`;
const CtasContainer = styled.div `
  text-align: center;

  .btn {
    margin: 0;
  }
  @media (max-width: 567px) {
    .btn {
      display: block;
      width: 100%;
    }
  }
`;
const StyledPanel = styled(SuiPanel)
`
  .bc-alert {
    border-radius: 0;
    margin: 0;
    font-size: 0.8em;
    padding: 20px;

    h2 {
      font-size: 1.2em;
      margin-bottom: 8px;
    }
  }
`;