import React, {
    useMemo
} from 'react';
import {
    TextArea as TextAreaBase
} from '@britishcouncil/react-forms';
import {
    useId
} from '@britishcouncil/react-common';
import {
    Field,
    getFieldProps
} from '.';
const matchEverything = /.*/;
export const TextArea = ({
    extraMsg,
    ...props
}) => {
    const generatedId = useId(`${props.name}-`);
    const [fieldProps, inputProps] = getFieldProps(props);
    const {
        warning,
        value
    } = props;
    const id = props.id || generatedId;
    const warningRegex = warning ? .regex ? ? matchEverything;
    const warningVisible = useMemo(() => warningRegex ? .test(value), [warningRegex, value]);
    const warningMessage = warningVisible ? warning ? .message : undefined;
    return (React.createElement(Field, { ...fieldProps,
            id: id,
            warningMessage: warningMessage,
            showColon: props.showColon
        },
        props.subnote ? React.createElement("span", {
            className: "small"
        }, props.subnote) : null,
        React.createElement(TextAreaBase, {
            id: id,
            className: "form-control",
            ...inputProps
        }),
        extraMsg));
};