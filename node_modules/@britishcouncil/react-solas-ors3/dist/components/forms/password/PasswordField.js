import React, {
    useMemo,
    useState
} from 'react';
import styled from '@emotion/styled';
import {
    TextInput
} from '@britishcouncil/react-forms';
import {
    BsFillEyeFill,
    BsFillEyeSlashFill
} from 'react-icons/bs';
import {
    BcCheckbox
} from '../../general';
import {
    Field,
    getFieldProps
} from '../';
const i18nDefault = {
    showPassword: 'Show Password',
};
export const PasswordField = ({
    i18n = i18nDefault,
    inputDir = 'ltr',
    ...props
}) => {
    const [fieldProps, inputProps] = getFieldProps(props);
    const {
        warning,
        value
    } = props;
    const warningRegex = warning ? .regex;
    const warningVisible = useMemo(() => warningRegex ? .test(value), [warningRegex, value]);
    const warningMessage = warningVisible ? warning ? .message : undefined;
    const [passwordShown, setPasswordShown] = useState(false);
    return (React.createElement(Field, { ...fieldProps,
            warningMessage: warningMessage,
            showColon: props.showColon
        },
        React.createElement("div", {
                className: "row"
            },
            React.createElement("div", {
                    className: "col-xs-12 col-md-8"
                },
                React.createElement(StyledPsw, null,
                    React.createElement(TextInput, {
                        dir: inputDir,
                        className: "form-control",
                        type: passwordShown ? 'text' : 'password',
                        ...inputProps
                    }),
                    React.createElement("button", {
                        type: "button",
                        title: i18n.showPassword,
                        className: "hidden-md hidden-lg",
                        onClick: () => setPasswordShown(!passwordShown)
                    }, passwordShown ? React.createElement(BsFillEyeSlashFill, null) : React.createElement(BsFillEyeFill, null)))),
            React.createElement(StyledCheckbox, {
                    className: "visible-md visible-lg col-md-4"
                },
                React.createElement(BcCheckbox, {
                    checked: passwordShown,
                    background: "gray",
                    inline: true,
                    handleChange: () => setPasswordShown(!passwordShown),
                    "data-testid": "show-password"
                }, i18n.showPassword)))));
};
const StyledCheckbox = styled.div `
  padding: 0;
`;
const StyledPsw = styled.div `
  position: relative;

  > button {
    border: 0;
    position: absolute;
    right: 1px;
    top: 1px;
    height: 42px;
    width: 42px;
    background: none no-repeat 50%;
    outline: none;
    padding: 3px;

    > svg {
      transition: fill 0.2s ease-in-out;
      width: 1.25em;
      height: 1.25em;
      margin-top: 5px;
    }

    &:hover > svg {
      fill: #222;
    }
  }
`;